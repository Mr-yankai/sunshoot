{
  "ver": "1.0.25",
  "uuid": "fac2cbff-2f0c-4312-8e23-a997db6cc258",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n  uniform sampler2D texture;\n  varying vec2 v_uv0;\n  uniform vec2 iResolution;\nuniform vec2 mouse;\nuniform vec2 radius;\n  void mainImage( out vec4 fragColor, in vec2 uv )\n  {\n      vec2 imouse = vec2(mouse.x, iResolution.y - mouse.y);\n      vec4 tex = texture2D(texture, uv);\n      vec2 d = uv*iResolution.xy -imouse.xy ;\n      vec2 s = radius;\n      float r = dot(d, d)/dot(s,s);\n      vec4 finalColor =  tex * (1.08 - r);\n      fragColor = vec4(finalColor.rgb,0.75);\n  }\n  void main()\n  {\n      mainImage(gl_FragColor, v_uv0.xy);\n  }"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n  uniform sampler2D texture;\n  varying vec2 v_uv0;\n  uniform properties {\n      vec2 iResolution;\n      vec2 mouse;\n      vec2 radius;\n  };\n  void mainImage( out vec4 fragColor, in vec2 uv )\n  {\n      vec2 imouse = vec2(mouse.x, iResolution.y - mouse.y);\n      vec4 tex = texture2D(texture, uv);\n      vec2 d = uv*iResolution.xy -imouse.xy ;\n      vec2 s = radius;\n      float r = dot(d, d)/dot(s,s);\n      vec4 finalColor =  tex * (1.08 - r);\n      fragColor = vec4(finalColor.rgb,0.75);\n  }\n  void main()\n  {\n      mainImage(gl_FragColor, v_uv0.xy);\n  }"
      }
    }
  ],
  "subMetas": {}
}