{
  "ver": "1.0.25",
  "uuid": "b5b7dbcf-fc05-4990-8ddb-defbebafe0ee",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform sampler2D texture;\nvarying vec2 v_uv0;\nuniform vec2 iResolution;\nuniform float time;\nvec2 s(vec2 p)\n{\n    float d=time*0.2,x=8.*(p.x+d),y=8.*(p.y+d);\n    return vec2(cos(x-y)*cos(y),sin(x+y)*sin(y));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 rs = iResolution.xy;\n    vec2 uv = fragCoord;\n    vec2 q = uv+2./iResolution.x*(s(uv)-s(uv+rs));\n    fragColor = texture2D(texture, q);\n}\nvoid main()\n{\n    mainImage(gl_FragColor, v_uv0.xy);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform sampler2D texture;\nvarying vec2 v_uv0;\nuniform properties {\n    vec2 iResolution;\n    float time;\n};\nvec2 s(vec2 p)\n{\n    float d=time*0.2,x=8.*(p.x+d),y=8.*(p.y+d);\n    return vec2(cos(x-y)*cos(y),sin(x+y)*sin(y));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 rs = iResolution.xy;\n    vec2 uv = fragCoord;\n    vec2 q = uv+2./iResolution.x*(s(uv)-s(uv+rs));\n    fragColor = texture2D(texture, q);\n}\nvoid main()\n{\n    mainImage(gl_FragColor, v_uv0.xy);\n}"
      }
    }
  ],
  "subMetas": {}
}